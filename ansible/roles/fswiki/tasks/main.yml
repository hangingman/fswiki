---
#
# fswikiインストール
#
- name: Create archive of current git HEAD source
  delegate_to: localhost
  shell: |
    cd $(dirname {{ playbook_dir }} )
    git archive HEAD --format=tar.gz --output={{ role_path }}/files/fswiki.tar.gz

- name: Clean /tmp/deploy/ path
  file:
    state: absent
    path: /tmp/deploy/
  ignore_errors: yes

- name: Ensures deploy dir and fswiki default dirs exists
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ exec_user }}"
    group: fswiki
    recurse: yes
  loop:
    - "/tmp/deploy/"
    - "/var/log/fswiki/"
    - "/var/run/fswiki/"
    - "{{ working_dir }}/fswiki/"
    - "{{ working_dir }}/fswiki/attach/"
    - "{{ working_dir }}/fswiki/backup/"
    - "{{ working_dir }}/fswiki/config/"
    - "{{ working_dir }}/fswiki/data/"
    - "{{ working_dir }}/fswiki/layout/"
    - "{{ working_dir }}/fswiki/log/"

- name: Ensures default logs exist
  become: yes
  file:
    path: "{{ item }}"
    state: touch
    owner: "{{ exec_user }}"
    group: fswiki
  loop:
    - "{{ working_dir}}/fswiki/log/{{ access_log_file }}"
    - "{{ working_dir}}/fswiki/log/{{ attach_log_file }}"
    - "{{ working_dir}}/fswiki/log/{{ freeze_file }}"
    - "{{ working_dir}}/fswiki/log/{{ download_count_file }}"
    - "/var/log/fswiki/fswiki.log"

- name: Unarchive files
  unarchive:
    src: files/fswiki.tar.gz
    dest: /tmp/deploy/
    owner: "{{ exec_user }}"
    group: fswiki

- name: Copy config files if not exists
  become: yes
  shell: "find /tmp/deploy/config -name *.dat -print | xargs -I{} cp -n '{}' {{ working_dir }}/fswiki/config/"

- name: Copy data files if not exists
  become: yes
  shell: "find /tmp/deploy/data -name *.{ico,png,wiki} -print | xargs -I{} cp -n '{}' {{ working_dir }}/fswiki/data/"

- name: Update source and directories can overwrite (docs, lib, plugin, ...)
  become: yes
  shell: rsync -arz --delete --info=progress2 --owner --group /tmp/deploy/{{ item }} {{ working_dir }}/fswiki/
  loop:
    - docs
    - lib
    - plugin
    - theme
    - tmpl
    - tools
    - .perl-version
    - LogSearch.js
    - Procfile
    - README.md
    - app.psgi
    - cpanfile
    - get_accesslog.cgi
    - release.sh
    - wikidb.cgi

- name: Install dependency libraries
  become: yes
  become_user: "{{ exec_user }}"
  shell: /bin/bash -lci "{{ item }}"
  args:
    chdir: "{{ working_dir }}/fswiki/"
  loop:
    - perlbrew switch {{ perl_version }}
    - cpanm Carton
    - cpanm --local-lib=~/perl5 local::lib
    - carton install

- name: Copy systemctl unit file
  become: yes
  template:
    src: templates/etc/systemd/system/fswiki.service.j2
    dest: /etc/systemd/system/fswiki.service
    owner: root
    group: root
    mode: "0644"

- name: Copy freestylewiki setup.dat
  become: yes
  template:
    src: templates/setup.dat.j2
    dest: "{{ working_dir }}/fswiki/setup.dat"
    owner: "{{ exec_user }}"
    group: fswiki

- name: Reload systemctl unit file
  systemd:
    daemon_reload: yes
  become: true

- name: Enable systemctl unit file
  systemd:
    name: fswiki.service
    enabled: yes
  become: true

- name: Start systemctl unit file
  systemd:
    name: fswiki.service
    state: restarted
  become: true
